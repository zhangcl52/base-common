package com.hunter.common;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Calendar;import java.util.Date;import java.util.Locale;/** * Created by zhangchaolong on 16/6/10. */public final class DateUtil {    public static final String DATE_FORMAT = "yyyy-MM-dd";    public static final String TIME_FORMAT = "yyyy-MM-dd HH:mm:ss";    /**     * 获得某个日期所在月的第一天     *     * @param sDate     * @return     * @throws Exception     */    public static Date getFirstDayOfMonth(String sDate) throws Exception {        SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT);        Date date = sdf.parse(sDate);        return DateUtil.getFirstDayOfMonth(date);    }    /**     * 获得某个日期所在月的第一天     *     * @param date     * @return     * @throws Exception     */    public static Date getFirstDayOfMonth(Date date) throws Exception {        if (date == null) {            throw new Exception("param is not be null");        }        if (!(date instanceof Date)) {            throw new Exception("para is not a Date Type");        }        Calendar calendar = Calendar.getInstance();        calendar.setTime(date);        calendar.set(Calendar.DAY_OF_MONTH, 1);        return calendar.getTime();    }    /**     * 获得某个日期所在月的最后一天     *     * @param sDate     * @return     * @throws Exception     */    public static Date getLastDayOfMonth(String sDate) throws Exception {        SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT);        Date date = sdf.parse(sDate);        return DateUtil.getLastDayOfMonth(date);    }    /**     * 获得某个日期所在月的最后一天     *     * @param date     * @return     * @throws Exception     */    public static Date getLastDayOfMonth(Date date) throws Exception {        if (date == null) {            throw new Exception("param is not be null");        }        if (!(date instanceof Date)) {            throw new Exception("para is not a Date Type");        }        Calendar calendar = Calendar.getInstance();        calendar.setTime(date);        calendar.set(Calendar.DAY_OF_MONTH, calendar.getActualMaximum(Calendar.DAY_OF_MONTH));        return calendar.getTime();    }    /**     * 获得两个日期之间相差的天数     *     * @param startDate     * @param endDate     * @return     * @throws Exception     */    public static int getDaysBetweenDate(Date startDate, Date endDate) throws Exception {        if (!(startDate instanceof Date)) {            throw new Exception("para1 is not a Date Type");        }        if (!(endDate instanceof Date)) {            throw new Exception("para2 is not a Date Type");        }        int days = (int) ((endDate.getTime() - startDate.getTime()) / 1000 / 60 / 60 / 24);        return days;    }    /**     * 获得两个日期之前相差的小时数     *     * @param startDate     * @param endDate     * @return     * @throws Exception     */    public static int getHoursBetweenDate(Date startDate, Date endDate) throws Exception {        if (!(startDate instanceof Date)) {            throw new Exception("para1 is not a Date Type");        }        if (!(endDate instanceof Date)) {            throw new Exception("para2 is not a Date Type");        }        int days = (int) ((endDate.getTime() - startDate.getTime()) / 1000 / 60 / 60);        return days;    }    /**     * Date to String     *     * @param date     * @param format     * @return     */    public static String DateToStr(Date date, String format) {        String dateStr = null;        if (date != null) {            SimpleDateFormat simpleDateFormat = new SimpleDateFormat(format);            dateStr = simpleDateFormat.format(date);        }        return dateStr;    }    /**     * 转成long类型     * 20161222     *     * @param date     * @return     */    public static Long toLong(Date date) {        String dateStr = DateToStr(date, "yyyyMMdd");        return new Long(dateStr);    }    /**     * 转成Integer类型     * 20161222     *     * @param date     * @return     */    public static Integer toInteger(Date date) {        String dateStr = DateToStr(date, "yyyyMMdd");        return new Integer(dateStr);    }    /**     * 转换成string类型     *     * @param dateInteger     * @param oldFormat     * @param newFormat     * @return     */    public static String IntegerToStr(Integer dateInteger, String oldFormat, String newFormat) {        String dateStr = null;        try {            Date e = convertDate(dateInteger.toString(), oldFormat);            dateStr = DateToStr(e, newFormat);        } catch (ParseException var5) {            var5.printStackTrace();        }        return dateStr;    }    /**     * 转换成Integer类型     *     * @param start     * @param oldFormat     * @param newFormat     * @return     */    public static Integer strDateToIntegerDate(String start, String oldFormat, String newFormat) {        String dateStr = null;        try {            Date e = convertDate(start, oldFormat);            dateStr = DateToStr(e, newFormat);        } catch (ParseException var5) {            var5.printStackTrace();        }        return new Integer(dateStr);    }    /**     * 美国日期转换成中国日期     *     * @param enDateStr     * @param format     * @return     */    public static String enDateStrToZhDateStr(String enDateStr, String format) {        SimpleDateFormat sdf = new SimpleDateFormat("EEE MMM d HH:mm:ss Z SSS yyyy", Locale.US);        Date date = null;        try {            date = sdf.parse(enDateStr);        } catch (ParseException var5) {            var5.printStackTrace();        }        String dateStr = DateToStr(date, format);        return dateStr;    }    /**     * String to Date     *     * @param dateStr     * @param format     * @return     * @throws ParseException     */    public static Date convertDate(String dateStr, String format) throws ParseException {        Date date = null;        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(format);        date = simpleDateFormat.parse(dateStr);        return date;    }    /**     * String to String     *     * @param dateStr     * @param format     * @return     * @throws ParseException     */    public static String format(String dateStr, String format) throws ParseException {        Date date = convertDate(dateStr, format);        return DateToStr(date, format);    }    /**     * 加减分钟     *     * @param date     * @param minute     * @return     */    public static Date minuteChange(Date date, Integer minute) {        Calendar calendar = Calendar.getInstance();        calendar.setTime(date);        calendar.add(12, minute.intValue());        return calendar.getTime();    }    /**     * 加减小时     *     * @param date     * @param hour     * @return     */    public static Date hourChange(Date date, Integer hour) {        Calendar calendar = Calendar.getInstance();        calendar.setTime(date);        calendar.add(11, hour.intValue());        return calendar.getTime();    }    /**     * 加减天     *     * @param date     * @param day     * @return     */    public static Date dayChange(Date date, Integer day) {        Calendar calendar = Calendar.getInstance();        calendar.setTime(date);        calendar.add(7, day.intValue());        return calendar.getTime();    }    /**     * 加减月     *     * @param date     * @param month     * @return     */    public static Date monthChange(Date date, Integer month) {        SimpleDateFormat format = new SimpleDateFormat(DATE_FORMAT);        format.format(date);        Calendar calendar = Calendar.getInstance();        calendar.setTime(date);        calendar.add(2, month);        return calendar.getTime();    }    /**     * 加减年     *     * @param date     * @param year     * @return     */    public static Date yearChange(Date date, Integer year) {        Calendar calendar = Calendar.getInstance();        calendar.setTime(date);        calendar.add(1, year.intValue());        return calendar.getTime();    }    /**     * 获取年     *     * @param date     * @return     */    public static Integer getYear(Date date) {        if (date == null) {            return null;        } else {            Calendar calendar = Calendar.getInstance();            calendar.setTime(date);            return Integer.valueOf(calendar.get(1));        }    }    /**     * 获取月     *     * @param date     * @return     */    public static Integer getMonth(Date date) {        if (date == null) {            return null;        } else {            Calendar calendar = Calendar.getInstance();            calendar.setTime(date);            return Integer.valueOf(calendar.get(2) + 1);        }    }    /**     * 获取日     *     * @param date     * @return     */    public static Integer getDay(Date date) {        if (date == null) {            return null;        } else {            Calendar calendar = Calendar.getInstance();            calendar.setTime(date);            return Integer.valueOf(calendar.get(5));        }    }    /**     * 设置日     *     * @param date     * @param day     * @return     */    public static Date setDay(Date date, Integer day) {        if (date == null) {            return null;        } else {            Calendar calendar = Calendar.getInstance();            calendar.setTime(date);            calendar.set(5, day.intValue());            return calendar.getTime();        }    }    /**     * 获取当前日期     *     * @return     */    public static String getCurrentDate() {        Calendar c = Calendar.getInstance();        Date date = c.getTime();        SimpleDateFormat simple = new SimpleDateFormat(DATE_FORMAT);        return simple.format(date);    }}